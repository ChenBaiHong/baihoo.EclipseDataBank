		
《============================================================================》
10、统一异常处理
		需求：
				一般项目中都需要作异常处理，基于系统架构的设计考虑，使用统一的异常处理方法。

				系统中异常类型有哪些？
					包括预期可能发生的异常、运行时异常（RuntimeException），运行时异常不是预期会发生的。
					针对预期可能发生的异常，在代码手动处理异常可以try/catch捕获，可以向上抛出。
					针对运行时异常，只能通过规范代码质量、在系统测试时详细测试等排除运行时异常。

		--------------------------------------------------------------------------------------------------------
		10.1、统一异常处理解决方案
				针对预期可能发生的异常，定义很多异常类型，这些异常类型通常继承于Exception。
					这里定义一个系统自定义异常类：
					CustomException，用于测试。
					
		--------------------------------------------------------------------------------------------------------
		10.2、springmvc.xml 配置统一异常处理器
		
		10.3、异常处理逻辑

				根据不同的异常类型进行异常处理。

				系统自定义的异常类是CustomException ，在controller方法中、service方法中手动抛出此类异常。

				针对系统自定义的CustomException异常，就可以直接从异常类中获取异常信息，将异常处理在错误页面展示。
				
				针对非CustomException异常，对这类重新构造成一个CustomException，异常信息为“未知错误”，此类错误需要在系统测试阶段去排除。

				在统一异常处理器CustomExceptionResolver中实现上边的逻辑。
				
《============================================================================》
11、url的RESTful实现
		11.1、需求
				根据id查看商品信息，商品信息查看的连接使用RESTful方式实现，商品信息以json返回。
				
		11.2、第一步更改web.xml中前端控制器DispatcherServlet的配置
			具體參看web.xml 中 RESUTful説明配置
			
		11.2、第二步参数通过url传递
		
			com.baihoo.ssm.controller.BhProductJsonController.veiwProductJson(Integer)
			
		11.2、当DispatcherServlet拦截/开头的所有请求，对静态资源的访问就报错 ， 设置静态资源解析